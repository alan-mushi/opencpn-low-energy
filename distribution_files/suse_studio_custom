#!/bin/bash
#
# This script is executed whenever your appliance boots.  Here you can add
# commands to be executed before the system enters the first runlevel.  This
# could include loading kernel modules, starting daemons that aren't managed
# by init files, asking questions at the console, etc.
#
# The 'kiwi_type' variable will contain the format of the appliance (oem =
# disk image, vmx = VMware, iso = CD/DVD, xen = Xen).
#

# read in some variables
. /studio/profile

# start our pm-profile
/usr/lib/pm-profiler/enable-profile opencpn

# force the processor's cores freq
FREQ=$(cpupower frequency-info -l |tail -n 1 |cut -d " " -f 1) # we assume that all cores have the same limit than core 0
cpupower -c all frequency-set -u $FREQ # we don't touch the governor, pm-profiles does it

# in case the grub argument fails we disable all cores except the 0 one (it can't be stopped)
#i=$(grep -c processor /proc/cpuinfo)
#if [ i > 1 ]; then
#    for j in /sys/devices/system/cpu/cpu*/online; do echo 0 > $j; done
#fi

#Â we stop / disable unwanted services
if [ -n $(service --status-all |grep sshd | awk '{print $4}') ]; then
    systemctl stop sshd.service
	systemctl disable sshd.service
fi

if [ -n $(service --status-all |grep bluetooth | awk '{print $4}') ]; then
	systemctl stop bluetooth.service
	systemctl disable bluetooth.service
fi

# Check how we can reduce screen brightness
xbacklight 2> /dev/null || other_way=true
# if xbacklight isn't supported,
# we need to set the right permissions or our user can't change
# the screen brightness without login as root.
if [ $other_way = true ] ; then
	acpi_available=$(ls /proc/acpi/video/ 2> /dev/null |wc -l)
	if [ $acpi_available -gt 0 ]; then
		# if the video is supported by acpi
		FILE="/sys/class/backlight/acpi_video0/brightness"
	else
		# if the video is NOT supported by acpi
		# we use the full path to reach 'ls' because an alias may misbehave
		FILE=$(/bin/ls -d /sys/class/backlight/*_backlight/brightness |head -n 1)
	fi
	chown root:users $FILE
	chmod g+w $FILE
fi

# we run our script at the lxsession start
# added here to "survive" the install
if [ $(grep -c "/usr/bin/brightness" /etc/xdg/lxsession/LXDE/autostart) -eq 0 ]; then
	echo "/usr/bin/brightness" >> /etc/xdg/lxsession/LXDE/autostart
fi

if [ $(sysctl -n vm.dirty_writeback_centisecs) != 360000 ] ; then
	sysctl -w vm.dirty_writeback_centisecs=360000
	sysctl -w vm.dirty_expire_centisecs=360000
fi

if [ $(sysctl -n vm.dirty_background_ratio) != 20 ] ; then
	sysctl -w vm.dirty_background_ratio=20
fi

if [ $(sysctl -n vm.dirty_ratio) != 20 ] ; then
	sysctl -w vm.dirty_ratio=20
fi
