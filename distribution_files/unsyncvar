#!/bin/sh
# ROLE: Moves the contents of /var/log to RAM and keeps it there until reload or stop, when it copies the contents back to permanent storage.
# SOURCE: http://www.debian-administration.org/articles/661
# NOTE: used by /etc/systemd/system/unsyncvar.service


NAME="transientlog"
PATH_HDD="/var/permanentlog/"
PATH_RAM="/var/log/"
MODE="0755"
SIZE="16M"

start()
{
	# Return
	#	0	if operations are sucessful (or service already running)
	#	1	if something went wrong (folder doesn't exists or can't be created)
	#	4	if transient log isn't running as root

	[ -f /var/lock/$NAME.lock ] && return 0
	[ `id -u` -eq 0 ] || return 4
	[ -d $PATH_RAM ] || return 1
	[ -d $PATH_HDD ] || mkdir -p $PATH_HDD ||Â return 1

	mount --bind $PATH_RAM $PATH_HDD
	
	#Stop propagation
	mount --make-private $PATH_HDD

	mount -t tmpfs -o nosuid,noexec,nodev,mode=$MODE,size=$SIZE $NAME $PATH_RAM
	
	mount --make-private $PATH_RAM

	if [ $? -eq 0 ]; then
		if cp -rfp $PATH_HDD -T $PATH_RAM; then
			touch /var/lock/$NAME.lock
			return 0
		fi
		# Rollback the mount
		umount $PATH_RAM
	fi
	# Rollback the directory mangling
	umount $PATH_HDD
	rm -f /var/lock/$NAME.lock
	
	return 1
}

stop() 
{
	# Return
	#	0	if daemon has been stopped (or was already stopped)
	#	4	if the script isn't running as root
	[ -f /var/lock/$NAME.lock ] || return 0

	# Check if I am root
	[ `id -u` -eq 0 ] || return 4

	# Merge back to permanent storage
	cp -rfup $PATH_RAM -T $PATH_HDD

	umount -l $PATH_RAM
	umount -l $PATH_HDD
	rm -r /var/lock/$NAME.lock
	return 0
}

reload()
{
	# Return
	#	0	if transient log has been reloaded
	#	4	if the script isn't running as root

	[ -f /var/lock/$NAME.lock ] || return 0
        
	# Check if I am root
	[ `id -u` -eq 0 ] || return 4

	# Merge back to permanent storage
	cp -rfup $PATH_RAM -T $PATH_HDD
	return 0
}

#Execute option
case $1 in
	start|stop|reload)
		$1
		;;
	*)
		echo "Usage : systemctl {start|stop|status|reload} $0"
		;;
esac
